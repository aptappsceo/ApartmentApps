// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ApartmentApps.Client.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class Corporation
    {
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private IList<Property> _properties;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Property> Properties
        {
            get { return this._properties; }
            set { this._properties = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Corporation class.
        /// </summary>
        public Corporation()
        {
            this.Properties = new LazyList<Property>();
        }
        
        /// <summary>
        /// Initializes a new instance of the Corporation class with required
        /// arguments.
        /// </summary>
        public Corporation(string name)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            this.Name = name;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken propertiesSequence = ((JToken)inputObject["Properties"]);
                if (propertiesSequence != null && propertiesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken propertiesValue in ((JArray)propertiesSequence))
                    {
                        Property property = new Property();
                        property.DeserializeJson(propertiesValue);
                        this.Properties.Add(property);
                    }
                }
            }
        }
    }
}
