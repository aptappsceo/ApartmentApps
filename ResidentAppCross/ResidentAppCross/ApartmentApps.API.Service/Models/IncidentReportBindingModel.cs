// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ApartmentApps.Client.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class IncidentReportBindingModel
    {
        private string _buildingName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string BuildingName
        {
            get { return this._buildingName; }
            set { this._buildingName = value; }
        }
        
        private IList<IncidentCheckinBindingModel> _checkins;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<IncidentCheckinBindingModel> Checkins
        {
            get { return this._checkins; }
            set { this._checkins = value; }
        }
        
        private string _comments;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Comments
        {
            get { return this._comments; }
            set { this._comments = value; }
        }
        
        private DateTimeOffset? _createdOn;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? CreatedOn
        {
            get { return this._createdOn; }
            set { this._createdOn = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _incidentType;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string IncidentType
        {
            get { return this._incidentType; }
            set { this._incidentType = value; }
        }
        
        private IList<string> _photos;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Photos
        {
            get { return this._photos; }
            set { this._photos = value; }
        }
        
        private UserBindingModel _requester;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public UserBindingModel Requester
        {
            get { return this._requester; }
            set { this._requester = value; }
        }
        
        private string _requesterId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string RequesterId
        {
            get { return this._requesterId; }
            set { this._requesterId = value; }
        }
        
        private string _requesterPhoneNumber;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string RequesterPhoneNumber
        {
            get { return this._requesterPhoneNumber; }
            set { this._requesterPhoneNumber = value; }
        }
        
        private string _status;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private int? _unitId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? UnitId
        {
            get { return this._unitId; }
            set { this._unitId = value; }
        }
        
        private string _unitName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string UnitName
        {
            get { return this._unitName; }
            set { this._unitName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the IncidentReportBindingModel class.
        /// </summary>
        public IncidentReportBindingModel()
        {
            this.Checkins = new LazyList<IncidentCheckinBindingModel>();
            this.Photos = new LazyList<string>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken buildingNameValue = inputObject["BuildingName"];
                if (buildingNameValue != null && buildingNameValue.Type != JTokenType.Null)
                {
                    this.BuildingName = ((string)buildingNameValue);
                }
                JToken checkinsSequence = ((JToken)inputObject["Checkins"]);
                if (checkinsSequence != null && checkinsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken checkinsValue in ((JArray)checkinsSequence))
                    {
                        IncidentCheckinBindingModel incidentCheckinBindingModel = new IncidentCheckinBindingModel();
                        incidentCheckinBindingModel.DeserializeJson(checkinsValue);
                        this.Checkins.Add(incidentCheckinBindingModel);
                    }
                }
                JToken commentsValue = inputObject["Comments"];
                if (commentsValue != null && commentsValue.Type != JTokenType.Null)
                {
                    this.Comments = ((string)commentsValue);
                }
                JToken createdOnValue = inputObject["CreatedOn"];
                if (createdOnValue != null && createdOnValue.Type != JTokenType.Null)
                {
                    this.CreatedOn = ((DateTimeOffset)createdOnValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken incidentTypeValue = inputObject["IncidentType"];
                if (incidentTypeValue != null && incidentTypeValue.Type != JTokenType.Null)
                {
                    this.IncidentType = ((string)incidentTypeValue);
                }
                JToken photosSequence = ((JToken)inputObject["Photos"]);
                if (photosSequence != null && photosSequence.Type != JTokenType.Null)
                {
                    foreach (JToken photosValue in ((JArray)photosSequence))
                    {
                        this.Photos.Add(((string)photosValue));
                    }
                }
                JToken requesterValue = inputObject["Requester"];
                if (requesterValue != null && requesterValue.Type != JTokenType.Null)
                {
                    UserBindingModel userBindingModel = new UserBindingModel();
                    userBindingModel.DeserializeJson(requesterValue);
                    this.Requester = userBindingModel;
                }
                JToken requesterIdValue = inputObject["RequesterId"];
                if (requesterIdValue != null && requesterIdValue.Type != JTokenType.Null)
                {
                    this.RequesterId = ((string)requesterIdValue);
                }
                JToken requesterPhoneNumberValue = inputObject["RequesterPhoneNumber"];
                if (requesterPhoneNumberValue != null && requesterPhoneNumberValue.Type != JTokenType.Null)
                {
                    this.RequesterPhoneNumber = ((string)requesterPhoneNumberValue);
                }
                JToken statusValue = inputObject["Status"];
                if (statusValue != null && statusValue.Type != JTokenType.Null)
                {
                    this.Status = ((string)statusValue);
                }
                JToken unitIdValue = inputObject["UnitId"];
                if (unitIdValue != null && unitIdValue.Type != JTokenType.Null)
                {
                    this.UnitId = ((int)unitIdValue);
                }
                JToken unitNameValue = inputObject["UnitName"];
                if (unitNameValue != null && unitNameValue.Type != JTokenType.Null)
                {
                    this.UnitName = ((string)unitNameValue);
                }
            }
        }
    }
}
