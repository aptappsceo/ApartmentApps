// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ApartmentApps.Client.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class MaintenanceBindingModel
    {
        private IList<string> _acceptableCheckinCodes;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> AcceptableCheckinCodes
        {
            get { return this._acceptableCheckinCodes; }
            set { this._acceptableCheckinCodes = value; }
        }
        
        private string _buildingName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string BuildingName
        {
            get { return this._buildingName; }
            set { this._buildingName = value; }
        }
        
        private IList<MaintenanceCheckinBindingModel> _checkins;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<MaintenanceCheckinBindingModel> Checkins
        {
            get { return this._checkins; }
            set { this._checkins = value; }
        }
        
        private string _message;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Message
        {
            get { return this._message; }
            set { this._message = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private bool? _permissionToEnter;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? PermissionToEnter
        {
            get { return this._permissionToEnter; }
            set { this._permissionToEnter = value; }
        }
        
        private int? _petStatus;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? PetStatus
        {
            get { return this._petStatus; }
            set { this._petStatus = value; }
        }
        
        private IList<string> _photos;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Photos
        {
            get { return this._photos; }
            set { this._photos = value; }
        }
        
        private DateTimeOffset? _scheduleDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? ScheduleDate
        {
            get { return this._scheduleDate; }
            set { this._scheduleDate = value; }
        }
        
        private string _status;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private string _unitName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string UnitName
        {
            get { return this._unitName; }
            set { this._unitName = value; }
        }
        
        private UserBindingModel _user;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public UserBindingModel User
        {
            get { return this._user; }
            set { this._user = value; }
        }
        
        private string _userId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string UserId
        {
            get { return this._userId; }
            set { this._userId = value; }
        }
        
        private string _userName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string UserName
        {
            get { return this._userName; }
            set { this._userName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the MaintenanceBindingModel class.
        /// </summary>
        public MaintenanceBindingModel()
        {
            this.AcceptableCheckinCodes = new LazyList<string>();
            this.Checkins = new LazyList<MaintenanceCheckinBindingModel>();
            this.Photos = new LazyList<string>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken acceptableCheckinCodesSequence = ((JToken)inputObject["AcceptableCheckinCodes"]);
                if (acceptableCheckinCodesSequence != null && acceptableCheckinCodesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken acceptableCheckinCodesValue in ((JArray)acceptableCheckinCodesSequence))
                    {
                        this.AcceptableCheckinCodes.Add(((string)acceptableCheckinCodesValue));
                    }
                }
                JToken buildingNameValue = inputObject["BuildingName"];
                if (buildingNameValue != null && buildingNameValue.Type != JTokenType.Null)
                {
                    this.BuildingName = ((string)buildingNameValue);
                }
                JToken checkinsSequence = ((JToken)inputObject["Checkins"]);
                if (checkinsSequence != null && checkinsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken checkinsValue in ((JArray)checkinsSequence))
                    {
                        MaintenanceCheckinBindingModel maintenanceCheckinBindingModel = new MaintenanceCheckinBindingModel();
                        maintenanceCheckinBindingModel.DeserializeJson(checkinsValue);
                        this.Checkins.Add(maintenanceCheckinBindingModel);
                    }
                }
                JToken messageValue = inputObject["Message"];
                if (messageValue != null && messageValue.Type != JTokenType.Null)
                {
                    this.Message = ((string)messageValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken permissionToEnterValue = inputObject["PermissionToEnter"];
                if (permissionToEnterValue != null && permissionToEnterValue.Type != JTokenType.Null)
                {
                    this.PermissionToEnter = ((bool)permissionToEnterValue);
                }
                JToken petStatusValue = inputObject["PetStatus"];
                if (petStatusValue != null && petStatusValue.Type != JTokenType.Null)
                {
                    this.PetStatus = ((int)petStatusValue);
                }
                JToken photosSequence = ((JToken)inputObject["Photos"]);
                if (photosSequence != null && photosSequence.Type != JTokenType.Null)
                {
                    foreach (JToken photosValue in ((JArray)photosSequence))
                    {
                        this.Photos.Add(((string)photosValue));
                    }
                }
                JToken scheduleDateValue = inputObject["ScheduleDate"];
                if (scheduleDateValue != null && scheduleDateValue.Type != JTokenType.Null)
                {
                    this.ScheduleDate = ((DateTimeOffset)scheduleDateValue);
                }
                JToken statusValue = inputObject["Status"];
                if (statusValue != null && statusValue.Type != JTokenType.Null)
                {
                    this.Status = ((string)statusValue);
                }
                JToken unitNameValue = inputObject["UnitName"];
                if (unitNameValue != null && unitNameValue.Type != JTokenType.Null)
                {
                    this.UnitName = ((string)unitNameValue);
                }
                JToken userValue = inputObject["User"];
                if (userValue != null && userValue.Type != JTokenType.Null)
                {
                    UserBindingModel userBindingModel = new UserBindingModel();
                    userBindingModel.DeserializeJson(userValue);
                    this.User = userBindingModel;
                }
                JToken userIdValue = inputObject["UserId"];
                if (userIdValue != null && userIdValue.Type != JTokenType.Null)
                {
                    this.UserId = ((string)userIdValue);
                }
                JToken userNameValue = inputObject["UserName"];
                if (userNameValue != null && userNameValue.Type != JTokenType.Null)
                {
                    this.UserName = ((string)userNameValue);
                }
            }
        }
    }
}
