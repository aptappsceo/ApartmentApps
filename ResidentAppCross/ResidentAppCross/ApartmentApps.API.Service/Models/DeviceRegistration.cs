// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class DeviceRegistration
    {
        private string _handle;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Handle
        {
            get { return this._handle; }
            set { this._handle = value; }
        }
        
        private string _platform;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Platform
        {
            get { return this._platform; }
            set { this._platform = value; }
        }
        
        private IList<string> _tags;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Tags
        {
            get { return this._tags; }
            set { this._tags = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DeviceRegistration class.
        /// </summary>
        public DeviceRegistration()
        {
            this.Tags = new LazyList<string>();
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type DeviceRegistration
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Handle != null)
            {
                outputObject["Handle"] = this.Handle;
            }
            if (this.Platform != null)
            {
                outputObject["Platform"] = this.Platform;
            }
            JArray tagsSequence = null;
            if (this.Tags != null)
            {
                if (this.Tags is ILazyCollection<string> == false || ((ILazyCollection<string>)this.Tags).IsInitialized)
                {
                    tagsSequence = new JArray();
                    outputObject["Tags"] = tagsSequence;
                    foreach (string tagsItem in this.Tags)
                    {
                        if (tagsItem != null)
                        {
                            tagsSequence.Add(tagsItem);
                        }
                    }
                }
            }
            return outputObject;
        }
    }
}
