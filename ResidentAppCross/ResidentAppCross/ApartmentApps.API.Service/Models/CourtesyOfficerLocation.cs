// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using ApartmentApps.Client.Models;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class CourtesyOfficerLocation
    {
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _label;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Label
        {
            get { return this._label; }
            set { this._label = value; }
        }
        
        private double? _latitude;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Latitude
        {
            get { return this._latitude; }
            set { this._latitude = value; }
        }
        
        private string _locationId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string LocationId
        {
            get { return this._locationId; }
            set { this._locationId = value; }
        }
        
        private double? _longitude;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Longitude
        {
            get { return this._longitude; }
            set { this._longitude = value; }
        }
        
        private Property _property;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Property Property
        {
            get { return this._property; }
            set { this._property = value; }
        }
        
        private int? _propertyId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? PropertyId
        {
            get { return this._propertyId; }
            set { this._propertyId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CourtesyOfficerLocation class.
        /// </summary>
        public CourtesyOfficerLocation()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken labelValue = inputObject["Label"];
                if (labelValue != null && labelValue.Type != JTokenType.Null)
                {
                    this.Label = ((string)labelValue);
                }
                JToken latitudeValue = inputObject["Latitude"];
                if (latitudeValue != null && latitudeValue.Type != JTokenType.Null)
                {
                    this.Latitude = ((double)latitudeValue);
                }
                JToken locationIdValue = inputObject["LocationId"];
                if (locationIdValue != null && locationIdValue.Type != JTokenType.Null)
                {
                    this.LocationId = ((string)locationIdValue);
                }
                JToken longitudeValue = inputObject["Longitude"];
                if (longitudeValue != null && longitudeValue.Type != JTokenType.Null)
                {
                    this.Longitude = ((double)longitudeValue);
                }
                JToken propertyValue = inputObject["Property"];
                if (propertyValue != null && propertyValue.Type != JTokenType.Null)
                {
                    Property property = new Property();
                    property.DeserializeJson(propertyValue);
                    this.Property = property;
                }
                JToken propertyIdValue = inputObject["PropertyId"];
                if (propertyIdValue != null && propertyIdValue.Type != JTokenType.Null)
                {
                    this.PropertyId = ((int)propertyIdValue);
                }
            }
        }
    }
}
