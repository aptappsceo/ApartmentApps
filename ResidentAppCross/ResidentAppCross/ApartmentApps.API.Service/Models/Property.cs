// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using ApartmentApps.Client.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class Property
    {
        private Corporation _corporation;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Corporation Corporation
        {
            get { return this._corporation; }
            set { this._corporation = value; }
        }
        
        private int? _corporationId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? CorporationId
        {
            get { return this._corporationId; }
            set { this._corporationId = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private IList<PropertyAddon> _propertyAddons;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<PropertyAddon> PropertyAddons
        {
            get { return this._propertyAddons; }
            set { this._propertyAddons = value; }
        }
        
        private IList<Tenant> _tenants;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Tenant> Tenants
        {
            get { return this._tenants; }
            set { this._tenants = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Property class.
        /// </summary>
        public Property()
        {
            this.PropertyAddons = new LazyList<PropertyAddon>();
            this.Tenants = new LazyList<Tenant>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken corporationValue = inputObject["Corporation"];
                if (corporationValue != null && corporationValue.Type != JTokenType.Null)
                {
                    Corporation corporation = new Corporation();
                    corporation.DeserializeJson(corporationValue);
                    this.Corporation = corporation;
                }
                JToken corporationIdValue = inputObject["CorporationId"];
                if (corporationIdValue != null && corporationIdValue.Type != JTokenType.Null)
                {
                    this.CorporationId = ((int)corporationIdValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken propertyAddonsSequence = ((JToken)inputObject["PropertyAddons"]);
                if (propertyAddonsSequence != null && propertyAddonsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken propertyAddonsValue in ((JArray)propertyAddonsSequence))
                    {
                        PropertyAddon propertyAddon = new PropertyAddon();
                        propertyAddon.DeserializeJson(propertyAddonsValue);
                        this.PropertyAddons.Add(propertyAddon);
                    }
                }
                JToken tenantsSequence = ((JToken)inputObject["Tenants"]);
                if (tenantsSequence != null && tenantsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken tenantsValue in ((JArray)tenantsSequence))
                    {
                        Tenant tenant = new Tenant();
                        tenant.DeserializeJson(tenantsValue);
                        this.Tenants.Add(tenant);
                    }
                }
            }
        }
    }
}
