// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace ApartmentApps.Client.Models
{
    public partial class PaymentsConfig
    {
        private double? _bankAccountCheckingConvenienceFee;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? BankAccountCheckingConvenienceFee
        {
            get { return this._bankAccountCheckingConvenienceFee; }
            set { this._bankAccountCheckingConvenienceFee = value; }
        }
        
        private double? _bankAccountSavingsConvenienceFee;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? BankAccountSavingsConvenienceFee
        {
            get { return this._bankAccountSavingsConvenienceFee; }
            set { this._bankAccountSavingsConvenienceFee = value; }
        }
        
        private double? _creditCardConvenienceFee;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? CreditCardConvenienceFee
        {
            get { return this._creditCardConvenienceFee; }
            set { this._creditCardConvenienceFee = value; }
        }
        
        private bool? _enabled;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? Enabled
        {
            get { return this._enabled; }
            set { this._enabled = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _merchantId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string MerchantId
        {
            get { return this._merchantId; }
            set { this._merchantId = value; }
        }
        
        private string _merchantPassword;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string MerchantPassword
        {
            get { return this._merchantPassword; }
            set { this._merchantPassword = value; }
        }
        
        private int? _propertyId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? PropertyId
        {
            get { return this._propertyId; }
            set { this._propertyId = value; }
        }
        
        private string _url;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Url
        {
            get { return this._url; }
            set { this._url = value; }
        }
        
        private bool? _useUrl;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? UseUrl
        {
            get { return this._useUrl; }
            set { this._useUrl = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the PaymentsConfig class.
        /// </summary>
        public PaymentsConfig()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken bankAccountCheckingConvenienceFeeValue = inputObject["BankAccountCheckingConvenienceFee"];
                if (bankAccountCheckingConvenienceFeeValue != null && bankAccountCheckingConvenienceFeeValue.Type != JTokenType.Null)
                {
                    this.BankAccountCheckingConvenienceFee = ((double)bankAccountCheckingConvenienceFeeValue);
                }
                JToken bankAccountSavingsConvenienceFeeValue = inputObject["BankAccountSavingsConvenienceFee"];
                if (bankAccountSavingsConvenienceFeeValue != null && bankAccountSavingsConvenienceFeeValue.Type != JTokenType.Null)
                {
                    this.BankAccountSavingsConvenienceFee = ((double)bankAccountSavingsConvenienceFeeValue);
                }
                JToken creditCardConvenienceFeeValue = inputObject["CreditCardConvenienceFee"];
                if (creditCardConvenienceFeeValue != null && creditCardConvenienceFeeValue.Type != JTokenType.Null)
                {
                    this.CreditCardConvenienceFee = ((double)creditCardConvenienceFeeValue);
                }
                JToken enabledValue = inputObject["Enabled"];
                if (enabledValue != null && enabledValue.Type != JTokenType.Null)
                {
                    this.Enabled = ((bool)enabledValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken merchantIdValue = inputObject["MerchantId"];
                if (merchantIdValue != null && merchantIdValue.Type != JTokenType.Null)
                {
                    this.MerchantId = ((string)merchantIdValue);
                }
                JToken merchantPasswordValue = inputObject["MerchantPassword"];
                if (merchantPasswordValue != null && merchantPasswordValue.Type != JTokenType.Null)
                {
                    this.MerchantPassword = ((string)merchantPasswordValue);
                }
                JToken propertyIdValue = inputObject["PropertyId"];
                if (propertyIdValue != null && propertyIdValue.Type != JTokenType.Null)
                {
                    this.PropertyId = ((int)propertyIdValue);
                }
                JToken urlValue = inputObject["Url"];
                if (urlValue != null && urlValue.Type != JTokenType.Null)
                {
                    this.Url = ((string)urlValue);
                }
                JToken useUrlValue = inputObject["UseUrl"];
                if (useUrlValue != null && useUrlValue.Type != JTokenType.Null)
                {
                    this.UseUrl = ((bool)useUrlValue);
                }
            }
        }
    }
}
