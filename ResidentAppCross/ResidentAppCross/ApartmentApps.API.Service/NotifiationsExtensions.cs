// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using ApartmentApps.Client;
using Microsoft.Rest;

namespace ApartmentApps.Client
{
    public static partial class NotifiationsExtensions
    {
        /// <param name='operations'>
        /// Reference to the ApartmentApps.Client.INotifiations.
        /// </param>
        /// <param name='pns'>
        /// Required.
        /// </param>
        /// <param name='message'>
        /// Required.
        /// </param>
        /// <param name='toTag'>
        /// Required.
        /// </param>
        public static string Post(this INotifiations operations, string pns, string message, string toTag)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((INotifiations)s).PostAsync(pns, message, toTag);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the ApartmentApps.Client.INotifiations.
        /// </param>
        /// <param name='pns'>
        /// Required.
        /// </param>
        /// <param name='message'>
        /// Required.
        /// </param>
        /// <param name='toTag'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> PostAsync(this INotifiations operations, string pns, string message, string toTag, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.PostWithOperationResponseAsync(pns, message, toTag, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
