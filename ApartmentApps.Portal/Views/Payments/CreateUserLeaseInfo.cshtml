@using ApartmentApps.Api.Modules
@using ApartmentApps.Portal.Controllers
@model ApartmentApps.Api.Modules.CreateUserLeaseInfoBindingModel
@{
    ViewBag.Title = "Create";
    UserBindingModel userPlaceholder = null;
}




<div class="page-header">
    <div class="col-sm-4">
        <h2>Create</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Create</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create MaitenanceRequest</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("SubmitCreateUserLeaseInfo","Payments","POST"))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, "Title", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(m=>m.Title)
                                    @Html.ValidationMessageFor(model => model.Title)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserId, "User", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EJ().DropDownListFor(s=>s.UserId).Datasource(Model.UserIdItems).DropDownListFields(s=>s.Value("Id").Text("FullName")).EnableFilterSearch()
                                    @Html.ValidationMessageFor(model => model.UserId)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, "Amount", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EJ().CurrencyTextbox("Amount").DecimalPlaces(2).IncrementStep(0.5).MinValue(0).Name("Amount")
                                    @Html.ValidationMessageFor(model => model.Amount)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.InvoiceDate, "Invoice Date", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EJ().DatePicker(nameof(Model.InvoiceDate))
                                    @Html.ValidationMessageFor(model => model.InvoiceDate)
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.IntervalMonths, "Months Interval", new { @class = "control-label col-md-2" })


                                <div class="col-md-10">
                                    @Html.EJ().NumericTextBoxFor(s => s.IntervalMonths).IncrementStep(1).ShowSpinButton().MinValue(0).MaxValue(12)
                                    @Html.ValidationMessageFor(model => model.IntervalMonths)
                                </div>
                            </div>


                            @*

                            <div class="form-group">
                                @Html.LabelFor(model => model.IntervalDays, "Days", new { @class = "control-label col-md-2" })


                                <div class="col-md-10">
                                    @Html.EJ().NumericTextBoxFor(s => s.IntervalDays).IncrementStep(1).ShowSpinButton().MinValue(0).MaxValue(31)
                                    @Html.ValidationMessageFor(model => model.IntervalDays)
                                </div>
                            </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IntervalYears, "Years", new { @class = "control-label col-md-2" })


        <div class="col-md-10">
            @Html.EJ().NumericTextBoxFor(s => s.IntervalYears).IncrementStep(1).ShowSpinButton().MinValue(0)
            @Html.ValidationMessageFor(model => model.IntervalYears)
        </div>
    </div>
*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.RepetitionCompleteDate, "Complete After", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EJ().DatePicker(nameof(Model.RepetitionCompleteDate))
                                    @Html.ValidationMessageFor(model => model.RepetitionCompleteDate)
                                </div>
                            </div>

                            <div class="form-group">
                               <input class="btn btn-warning" type="submit" value="Create" />
                            </div>
                        
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


@section csspage {
    
    .e-content {
        height : 200px !important;
    }

}

@section Scripts {
    @*Scripts.Render("~/bundles/jqueryval")*@

}
