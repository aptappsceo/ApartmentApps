@model ApartmentApps.Modules.Payments.BindingModels.EditInvoiceBindingModel


<div class="page-header">
    <div class="col-sm-4">
        <h1>Edit Invoice</h1>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <h3>Actions:</h3>
        <div class="btn-group btn-group-vertical col-md-3">
            <a href="@Url.Action("MarkAsPaid",new {id = Model.Id})" class="btn btn-info">Mark Invoice As Paid</a>
            <a href="@Url.Action("CancelInvoice",new {id = Model.Id})" class="btn btn-danger">Cancel Invoice</a>
        </div>
    </div>
    
    <div class="row">
        <h3>Edit Information:</h3>
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit Invoice</h5>
                </div>
                <div class="ibox-content">


                    @using (Html.BeginForm("EditInvoice", "Payments", "POST"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(s => s.Id)
                        ;
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)




                            <div class="form-group">
                                @Html.LabelFor(model => model.Id, "Title", new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EJ().MaskEditTextBoxFor(m => m.Title)
                                    @Html.ValidationMessageFor(model => model.Title)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, "Amount", new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EJ().CurrencyTextbox("Amount").DecimalPlaces(2).IncrementStep(0.5).MinValue(0).Name("Amount").Value(Model.Amount)
                                    @Html.ValidationMessageFor(model => model.Amount)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AvailableDate, "Available On", new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EJ().DatePicker(nameof(Model.AvailableDate)).Value(Model.AvailableDate)
                                    @Html.ValidationMessageFor(model => model.AvailableDate)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DueDate, "Due Date", new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EJ().DatePicker(nameof(Model.DueDate)).Value(Model.DueDate)
                                    @Html.ValidationMessageFor(model => model.DueDate)
                                </div>
                            </div>

                            <div class="form-group">
                                <input class="btn btn-warning" type="submit" value="Save Changes"/>
                            </div>

                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
