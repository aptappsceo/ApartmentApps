@using System.ComponentModel.DataAnnotations
@using Syncfusion.JavaScript.Models
@model ApartmentApps.Forms.FormModel

<div class="form-horizontal">
    @foreach (var property in Model.Properties)
    {
        if (property.Hidden)
        {
            @Html.Hidden(property.Name, property.GetValue())
            continue;
        }
        <div class="form-group">
            <label class="control-label col-md-4" for="@property.Name">@property.Label</label>
            <div class="col-md-8">
                @if (property.Choices != null)
                {
                    if (property.Choices.Length <= 4)
                    {
                        <div data-toggle="buttons" class="btn-group">
                            @foreach (var item in property.Choices)
                            {
                                <label class="btn btn-sm btn-white @(item.Selected ? "active" : string.Empty)">
                                    <input type="radio" id="option1" name="@property.Name" value="@item.Id" @(item.Selected ? "checked" : string.Empty)> @item.Value
                                </label>
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DropDownList(property.Name, property.Choices.Select(p => new SelectListItem()
                        {
                            Value = p.Id,
                            Text = p.Value,
                            Selected = p.Selected
                        }))
                    }

                }
                else if (property.SystemType == typeof (DateTime) || property.SystemType == typeof(DateTime?))
                {
                    @Html.EJ().DatePicker(property.Name, new DatePickerProperties()
                    {
                        Value = property.GetValue()
                    })
                }
                else if (property.SystemType == typeof (bool))
                {
                    @Html.CheckBox(property.Name, (bool)property.GetValue())
                }
                else
                {
                    if (property.DataType.DataType == DataType.MultilineText)
                    {
                        @Html.TextArea(property.Name, property.GetValue()?.ToString())
                    }
                    else
                    {
                        @Html.TextBox(property.Name, property.GetValue()?.ToString())
                    }

                }
                @Html.ValidationMessage(property.Name)
            </div>
            <p class="small">@property.Description</p>
        </div>
    }
</div>
