@using GridMvc.Html
@model IEnumerable<ApartmentApps.Data.ApplicationUser>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Index</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Application User</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of ApplicationUser</h5>
                    <div class="ibox-tools">
                        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-xs" })
                    </div>
                </div>
                <div class="ibox-content">
                    @Html.Grid(Model).Columns(columns =>
                   {
                       columns.Add(foo => foo.FirstName).Titled("First Name").SetWidth(110);
                       //columns.Add(foo => foo.Unit.Building.Name).Titled("Building Name").SetWidth(110);
                       columns.Add(foo => foo.LastName).Titled("Last Name").Sortable(true).Filterable(true);
                       columns.Add(foo => foo.Email).Sortable(true).Filterable(true);
                       columns.Add().Titled("Roles").RenderValueAs(item=>@Html.Raw(string.Join(",",item.Roles.Select(p=>p.RoleId))));
                       columns.Add().Encoded(false).Sanitized(false).RenderValueAs(item => @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "" }));

                   }).WithPaging(10)

                </div>
            </div>
        </div>
    </div>
</div>



