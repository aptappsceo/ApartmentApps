//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApartmentApps.Modules.Prospect.IDScan {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://dlpws.idware.net")]
    [System.SerializableAttribute()]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ApartmentApps.Modules.Prospect.IDScan.ComplementaryService[] ComplementaryServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ApartmentApps.Modules.Prospect.IDScan.DriverLicense DriverLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ApartmentApps.Modules.Prospect.IDScan.ComplementaryService[] ComplementaryServices {
            get {
                return this.ComplementaryServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplementaryServicesField, value) != true)) {
                    this.ComplementaryServicesField = value;
                    this.RaisePropertyChanged("ComplementaryServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ApartmentApps.Modules.Prospect.IDScan.DriverLicense DriverLicense {
            get {
                return this.DriverLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverLicenseField, value) != true)) {
                    this.DriverLicenseField = value;
                    this.RaisePropertyChanged("DriverLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DriverLicense", Namespace="http://dlpws.idware.net")]
    [System.SerializableAttribute()]
    public partial class DriverLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardRevisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> ComplianceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndorsementsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EyeColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HAZMATExpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HairColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JurisdictionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> LimitedDurationDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OrganDonorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleClassCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VeteranField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightKGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightLBSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardRevisionDate {
            get {
                return this.CardRevisionDateField;
            }
            set {
                if ((this.CardRevisionDateField.Equals(value) != true)) {
                    this.CardRevisionDateField = value;
                    this.RaisePropertyChanged("CardRevisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassificationCode {
            get {
                return this.ClassificationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationCodeField, value) != true)) {
                    this.ClassificationCodeField = value;
                    this.RaisePropertyChanged("ClassificationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> ComplianceType {
            get {
                return this.ComplianceTypeField;
            }
            set {
                if ((this.ComplianceTypeField.Equals(value) != true)) {
                    this.ComplianceTypeField = value;
                    this.RaisePropertyChanged("ComplianceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementCodeDescription {
            get {
                return this.EndorsementCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementCodeDescriptionField, value) != true)) {
                    this.EndorsementCodeDescriptionField = value;
                    this.RaisePropertyChanged("EndorsementCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndorsementsCode {
            get {
                return this.EndorsementsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndorsementsCodeField, value) != true)) {
                    this.EndorsementsCodeField = value;
                    this.RaisePropertyChanged("EndorsementsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EyeColor {
            get {
                return this.EyeColorField;
            }
            set {
                if ((object.ReferenceEquals(this.EyeColorField, value) != true)) {
                    this.EyeColorField = value;
                    this.RaisePropertyChanged("EyeColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HAZMATExpDate {
            get {
                return this.HAZMATExpDateField;
            }
            set {
                if ((this.HAZMATExpDateField.Equals(value) != true)) {
                    this.HAZMATExpDateField = value;
                    this.RaisePropertyChanged("HAZMATExpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HairColor {
            get {
                return this.HairColorField;
            }
            set {
                if ((object.ReferenceEquals(this.HairColorField, value) != true)) {
                    this.HairColorField = value;
                    this.RaisePropertyChanged("HairColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IIN {
            get {
                return this.IINField;
            }
            set {
                if ((object.ReferenceEquals(this.IINField, value) != true)) {
                    this.IINField = value;
                    this.RaisePropertyChanged("IIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuedBy {
            get {
                return this.IssuedByField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuedByField, value) != true)) {
                    this.IssuedByField = value;
                    this.RaisePropertyChanged("IssuedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JurisdictionCode {
            get {
                return this.JurisdictionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JurisdictionCodeField, value) != true)) {
                    this.JurisdictionCodeField = value;
                    this.RaisePropertyChanged("JurisdictionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNumberField, value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> LimitedDurationDocument {
            get {
                return this.LimitedDurationDocumentField;
            }
            set {
                if ((this.LimitedDurationDocumentField.Equals(value) != true)) {
                    this.LimitedDurationDocumentField = value;
                    this.RaisePropertyChanged("LimitedDurationDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePrefix {
            get {
                return this.NamePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.NamePrefixField, value) != true)) {
                    this.NamePrefixField = value;
                    this.RaisePropertyChanged("NamePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OrganDonor {
            get {
                return this.OrganDonorField;
            }
            set {
                if ((this.OrganDonorField.Equals(value) != true)) {
                    this.OrganDonorField = value;
                    this.RaisePropertyChanged("OrganDonor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Race {
            get {
                return this.RaceField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceField, value) != true)) {
                    this.RaceField = value;
                    this.RaisePropertyChanged("Race");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionCode {
            get {
                return this.RestrictionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionCodeField, value) != true)) {
                    this.RestrictionCodeField = value;
                    this.RaisePropertyChanged("RestrictionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionCodeDescription {
            get {
                return this.RestrictionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionCodeDescriptionField, value) != true)) {
                    this.RestrictionCodeDescriptionField = value;
                    this.RaisePropertyChanged("RestrictionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleClassCode {
            get {
                return this.VehicleClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleClassCodeField, value) != true)) {
                    this.VehicleClassCodeField = value;
                    this.RaisePropertyChanged("VehicleClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleClassCodeDescription {
            get {
                return this.VehicleClassCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleClassCodeDescriptionField, value) != true)) {
                    this.VehicleClassCodeDescriptionField = value;
                    this.RaisePropertyChanged("VehicleClassCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Veteran {
            get {
                return this.VeteranField;
            }
            set {
                if ((this.VeteranField.Equals(value) != true)) {
                    this.VeteranField = value;
                    this.RaisePropertyChanged("Veteran");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightKG {
            get {
                return this.WeightKGField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightKGField, value) != true)) {
                    this.WeightKGField = value;
                    this.RaisePropertyChanged("WeightKG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightLBS {
            get {
                return this.WeightLBSField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightLBSField, value) != true)) {
                    this.WeightLBSField = value;
                    this.RaisePropertyChanged("WeightLBS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplementaryService", Namespace="http://dlpws.idware.net")]
    [System.SerializableAttribute()]
    public partial class ComplementaryService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dlpws.idware.net", ConfigurationName="IDScan.IDriverLicenseParser")]
    public interface IDriverLicenseParser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Utf16String", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Utf16StringResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64Utf16String(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Utf16String", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Utf16StringResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64Utf16StringAsync(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64AsciiString", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64AsciiStringResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64AsciiString(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64AsciiString", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64AsciiStringResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64AsciiStringAsync(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Binary", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64BinaryResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64Binary(string authKey, byte[] data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64Binary", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64BinaryResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64BinaryAsync(string authKey, byte[] data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseString", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseStringResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseString(string authKey, string licenseText, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseString", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseStringResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseStringAsync(string authKey, string licenseText, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseImage", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseImageResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseImage(string authKey, byte[] data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseImage", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseImageResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseImageAsync(string authKey, byte[] data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64EncodedImage", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64EncodedImageResponse")]
        ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64EncodedImage(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64EncodedImage", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/ParseBase64EncodedImageResponse")]
        System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64EncodedImageAsync(string authKey, string data, System.Nullable<short> terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/Echo", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/EchoResponse")]
        string Echo(string base64AsciiEncodedString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dlpws.idware.net/IDriverLicenseParser/Echo", ReplyAction="http://dlpws.idware.net/IDriverLicenseParser/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string base64AsciiEncodedString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDriverLicenseParserChannel : ApartmentApps.Modules.Prospect.IDScan.IDriverLicenseParser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriverLicenseParserClient : System.ServiceModel.ClientBase<ApartmentApps.Modules.Prospect.IDScan.IDriverLicenseParser>, ApartmentApps.Modules.Prospect.IDScan.IDriverLicenseParser {
        
        public DriverLicenseParserClient() {
        }
        
        public DriverLicenseParserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DriverLicenseParserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriverLicenseParserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriverLicenseParserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64Utf16String(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64Utf16String(authKey, data, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64Utf16StringAsync(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64Utf16StringAsync(authKey, data, terminalId);
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64AsciiString(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64AsciiString(authKey, data, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64AsciiStringAsync(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64AsciiStringAsync(authKey, data, terminalId);
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64Binary(string authKey, byte[] data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64Binary(authKey, data, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64BinaryAsync(string authKey, byte[] data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64BinaryAsync(authKey, data, terminalId);
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseString(string authKey, string licenseText, System.Nullable<short> terminalId) {
            return base.Channel.ParseString(authKey, licenseText, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseStringAsync(string authKey, string licenseText, System.Nullable<short> terminalId) {
            return base.Channel.ParseStringAsync(authKey, licenseText, terminalId);
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseImage(string authKey, byte[] data, System.Nullable<short> terminalId) {
            return base.Channel.ParseImage(authKey, data, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseImageAsync(string authKey, byte[] data, System.Nullable<short> terminalId) {
            return base.Channel.ParseImageAsync(authKey, data, terminalId);
        }
        
        public ApartmentApps.Modules.Prospect.IDScan.Response ParseBase64EncodedImage(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64EncodedImage(authKey, data, terminalId);
        }
        
        public System.Threading.Tasks.Task<ApartmentApps.Modules.Prospect.IDScan.Response> ParseBase64EncodedImageAsync(string authKey, string data, System.Nullable<short> terminalId) {
            return base.Channel.ParseBase64EncodedImageAsync(authKey, data, terminalId);
        }
        
        public string Echo(string base64AsciiEncodedString) {
            return base.Channel.Echo(base64AsciiEncodedString);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string base64AsciiEncodedString) {
            return base.Channel.EchoAsync(base64AsciiEncodedString);
        }
    }
}
